/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class MarketData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MarketData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MarketData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MarketData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ContextModulePINVOKE.delete_MarketData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public MarketData() : this(ContextModulePINVOKE.new_MarketData__SWIG_0(), true) {
  }

  public MarketData(Quote arg0) : this(ContextModulePINVOKE.new_MarketData__SWIG_1(Quote.getCPtr(arg0)), true) {
    if (ContextModulePINVOKE.SWIGPendingException.Pending) throw ContextModulePINVOKE.SWIGPendingException.Retrieve();
  }

  public Instrument getInstrument() {
    Instrument ret = new Instrument(ContextModulePINVOKE.MarketData_getInstrument(swigCPtr), true);
    return ret;
  }

  public int getLastPrice() {
    int ret = ContextModulePINVOKE.MarketData_getLastPrice(swigCPtr);
    return ret;
  }

  public int getLastQty() {
    int ret = ContextModulePINVOKE.MarketData_getLastQty(swigCPtr);
    return ret;
  }

  public int getLastTime() {
    int ret = ContextModulePINVOKE.MarketData_getLastTime(swigCPtr);
    return ret;
  }

  public int getTotalQty() {
    int ret = ContextModulePINVOKE.MarketData_getTotalQty(swigCPtr);
    return ret;
  }

  public int getDepth(Side side) {
    int ret = ContextModulePINVOKE.MarketData_getDepth(swigCPtr, (int)side);
    return ret;
  }

  public int getPrice(Side side, int rank) {
    int ret = ContextModulePINVOKE.MarketData_getPrice(swigCPtr, (int)side, rank);
    return ret;
  }

  public int getQty(Side side, int rank) {
    int ret = ContextModulePINVOKE.MarketData_getQty(swigCPtr, (int)side, rank);
    return ret;
  }

  public int getRank(Side side, int price) {
    int ret = ContextModulePINVOKE.MarketData_getRank(swigCPtr, (int)side, price);
    return ret;
  }

  public bool getCount(Side side, int rank) {
    bool ret = ContextModulePINVOKE.MarketData_getCount(swigCPtr, (int)side, rank);
    return ret;
  }

  public bool hasQty(Side side, int qty) {
    bool ret = ContextModulePINVOKE.MarketData_hasQty(swigCPtr, (int)side, qty);
    return ret;
  }

  public int getAvgPrice(Side side, int qty) {
    int ret = ContextModulePINVOKE.MarketData_getAvgPrice(swigCPtr, (int)side, qty);
    return ret;
  }

  public int getQtyForAvgPrice(Side side, int avgPrice) {
    int ret = ContextModulePINVOKE.MarketData_getQtyForAvgPrice(swigCPtr, (int)side, avgPrice);
    return ret;
  }

  public int getAvgPriceForQty(Side side, int qty) {
    int ret = ContextModulePINVOKE.MarketData_getAvgPriceForQty(swigCPtr, (int)side, qty);
    return ret;
  }

  public int getQtyForWorstPrice(Side side, int worstPrice) {
    int ret = ContextModulePINVOKE.MarketData_getQtyForWorstPrice(swigCPtr, (int)side, worstPrice);
    return ret;
  }

  public int getWorstPriceForQty(Side side, int qty) {
    int ret = ContextModulePINVOKE.MarketData_getWorstPriceForQty(swigCPtr, (int)side, qty);
    return ret;
  }

  public int getDayOpen() {
    int ret = ContextModulePINVOKE.MarketData_getDayOpen(swigCPtr);
    return ret;
  }

  public int getDayHigh() {
    int ret = ContextModulePINVOKE.MarketData_getDayHigh(swigCPtr);
    return ret;
  }

  public int getDayLow() {
    int ret = ContextModulePINVOKE.MarketData_getDayLow(swigCPtr);
    return ret;
  }

  public int getDayClose() {
    int ret = ContextModulePINVOKE.MarketData_getDayClose(swigCPtr);
    return ret;
  }

}
