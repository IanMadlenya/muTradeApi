/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


class ContextModeuleJNI {
  public final static native String longToString(long jarg1);
  public final static native long new_ExecutionReport__SWIG_0();
  public final static native long new_ExecutionReport__SWIG_1(String jarg1);
  public final static native void ExecutionReport_initialize(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getClOrderId(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getExchangeOrderId(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getSymbolId(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getLastFillQuantity(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getLastFillPrice(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getExchangeEntryTime(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getExchangeModifyTime(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getStrategyId(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getClientId(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getLimitPrice(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getOrderStatus(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getOrderMode(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getOrderQuantity(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getOrderPrice(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getIOCCanceledQuantity(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getOriginalClOrderId(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getConfirmationTimeSeconds(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getConfirmationTimeMicroSeconds(long jarg1, ExecutionReport jarg1_);
  public final static native short ExecutionReport_getIsOffline(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getSequenceNumber(long jarg1, ExecutionReport jarg1_);
  public final static native long ExecutionReport_getTradeId(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getErrorCode(long jarg1, ExecutionReport jarg1_);
  public final static native int ExecutionReport_getReasonText(long jarg1, ExecutionReport jarg1_);
  public final static native short ExecutionReport_getUnknownOrder(long jarg1, ExecutionReport jarg1_);
  public final static native String ExecutionReport_getInstrumentName(long jarg1, ExecutionReport jarg1_);
  public final static native void ExecutionReport_setClOrderId(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setExchangeOrderId(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setSymbolId(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setLastFillQuantity(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setLastFillPrice(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setExchangeEntryTime(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setExchangeModifyTime(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setStrategyId(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setClientId(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setLimitPrice(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setOrderStatus(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setOrderMode(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setOrderQuantity(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setOrderPrice(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setIOCCanceledQuantity(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setOriginalClOrderId(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setConfirmationTimeSeconds(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setConfirmationTimeMicroSeconds(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setIsOffline(long jarg1, ExecutionReport jarg1_, short jarg2);
  public final static native void ExecutionReport_setSequenceNumber(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setTradeId(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native void ExecutionReport_setErrorCode(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setReasonText(long jarg1, ExecutionReport jarg1_, int jarg2);
  public final static native void ExecutionReport_setUnknownOrder(long jarg1, ExecutionReport jarg1_, short jarg2);
  public final static native void ExecutionReport_setInstrumentName(long jarg1, ExecutionReport jarg1_, String jarg2);
  public final static native void ExecutionReport_dump(long jarg1, ExecutionReport jarg1_);
  public final static native void ExecutionReport_dumpCSV(long jarg1, ExecutionReport jarg1_, long jarg2);
  public final static native int ExecutionReport_serialize(long jarg1, ExecutionReport jarg1_, String jarg2);
  public final static native void delete_ExecutionReport(long jarg1);
  public final static native long new_ExecutionResponse__SWIG_0();
  public final static native long new_ExecutionResponse__SWIG_1(String jarg1);
  public final static native void ExecutionResponse_dump(long jarg1, ExecutionResponse jarg1_);
  public final static native java.math.BigInteger ExecutionResponse_getClOrderId(long jarg1, ExecutionResponse jarg1_);
  public final static native short ExecutionResponse_getTransactionType(long jarg1, ExecutionResponse jarg1_);
  public final static native short ExecutionResponse_getResponseType(long jarg1, ExecutionResponse jarg1_);
  public final static native long ExecutionResponse_getTokenId(long jarg1, ExecutionResponse jarg1_);
  public final static native void ExecutionResponse_setClOrderId(long jarg1, ExecutionResponse jarg1_, java.math.BigInteger jarg2);
  public final static native void ExecutionResponse_setTransactionType(long jarg1, ExecutionResponse jarg1_, short jarg2);
  public final static native void ExecutionResponse_setResponseType(long jarg1, ExecutionResponse jarg1_, short jarg2);
  public final static native void ExecutionResponse_setTokenId(long jarg1, ExecutionResponse jarg1_, long jarg2);
  public final static native void delete_ExecutionResponse(long jarg1);
  public final static native void AbstractLogger_log(long jarg1, AbstractLogger jarg1_, int jarg2, String jarg3);
  public final static native int AbstractLogger_getLevel(long jarg1, AbstractLogger jarg1_, int jarg2);
  public final static native void AbstractLogger_setLogLevel(long jarg1, AbstractLogger jarg1_, int jarg2);
  public final static native int AbstractLogger_getLogLevel(long jarg1, AbstractLogger jarg1_);
  public final static native long new_AbstractLogger();
  public final static native void delete_AbstractLogger(long jarg1);
  public final static native void AbstractLogger_director_connect(AbstractLogger obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AbstractLogger_change_ownership(AbstractLogger obj, long cptr, boolean take_or_release);
  public final static native long Logger_getInstance();
  public final static native void Logger_setLogLevel(long jarg1, Logger jarg1_, int jarg2);
  public final static native void Logger_log(long jarg1, Logger jarg1_, int jarg2, String jarg3);
  public final static native void delete_Logger(long jarg1);
  public final static native long new_Order();
  public final static native int Order_getClientId(long jarg1, Order jarg1_);
  public final static native int Order_getTransactionType(long jarg1, Order jarg1_);
  public final static native long Order_getClOrdId(long jarg1, Order jarg1_);
  public final static native long Order_getOrigClOrdId(long jarg1, Order jarg1_);
  public final static native String Order_getExchangeOrderId(long jarg1, Order jarg1_);
  public final static native String Order_getSymbol(long jarg1, Order jarg1_);
  public final static native int Order_getOrderMode(long jarg1, Order jarg1_);
  public final static native int Order_getQuantity(long jarg1, Order jarg1_);
  public final static native int Order_getDisclosedQuantity(long jarg1, Order jarg1_);
  public final static native int Order_getFilledQuantity(long jarg1, Order jarg1_);
  public final static native int Order_getOldQuantity(long jarg1, Order jarg1_);
  public final static native int Order_getPrice(long jarg1, Order jarg1_);
  public final static native int Order_getStopPrice(long jarg1, Order jarg1_);
  public final static native int Order_getSecurityType(long jarg1, Order jarg1_);
  public final static native int Order_getOrderValidity(long jarg1, Order jarg1_);
  public final static native int Order_getOrderType(long jarg1, Order jarg1_);
  public final static native int Order_getOrderStatus(long jarg1, Order jarg1_);
  public final static native int Order_getExchangeEntryTime(long jarg1, Order jarg1_);
  public final static native int Order_getExchangeModifyTime(long jarg1, Order jarg1_);
  public final static native void Order_setClientId(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setTransactionType(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setClOrdId(long jarg1, Order jarg1_, long jarg2);
  public final static native void Order_setOrigClOrdId(long jarg1, Order jarg1_, long jarg2);
  public final static native void Order_setExchangeOrderId(long jarg1, Order jarg1_, String jarg2);
  public final static native void Order_setSymbol(long jarg1, Order jarg1_, String jarg2);
  public final static native void Order_setOrderMode(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setQuantity(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setDisclosedQuantity(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setFilledQuantity(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setOldQuantity(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setPrice(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setStopPrice(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setSecurityType(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setOrderValidity(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setOrderType(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setOrderStatus(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setExchangeEntryTime(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_setExchangeModifyTime(long jarg1, Order jarg1_, int jarg2);
  public final static native void Order_initialize(long jarg1, Order jarg1_);
  public final static native void Order_dumpOrder(long jarg1, Order jarg1_);
  public final static native void delete_Order(long jarg1);
  public final static native long new_Instrument__SWIG_0();
  public final static native long new_Instrument__SWIG_1(String jarg1);
  public final static native int Instrument_getInstrumentType(long jarg1, Instrument jarg1_);
  public final static native long Instrument_getStrikePrice(long jarg1, Instrument jarg1_);
  public final static native String Instrument_getSeries(long jarg1, Instrument jarg1_);
  public final static native int Instrument_getLotSize(long jarg1, Instrument jarg1_);
  public final static native int Instrument_getTickSize(long jarg1, Instrument jarg1_);
  public final static native int Instrument_getOptionType(long jarg1, Instrument jarg1_);
  public final static native String Instrument_getInstrumentName(long jarg1, Instrument jarg1_);
  public final static native void delete_Instrument(long jarg1);
  public final static native long new_Quote__SWIG_0();
  public final static native long new_Quote__SWIG_1(long jarg1, Quote jarg1_);
  public final static native void Quote_setSymbolId(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setNummberOfTrades(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setVolume(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setValue(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setLastTradePrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setLastTradeQty(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setOpenPrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setClosePrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setHighPrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setLowPrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setTotalBidQty(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setTotalAskQty(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setLowerCktLimit(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setUpperCktLimit(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setDepth(long jarg1, Quote jarg1_, short jarg2);
  public final static native void Quote_setBidPrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setBidQty(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setAskPrice(long jarg1, Quote jarg1_, long jarg2);
  public final static native void Quote_setAskQty(long jarg1, Quote jarg1_, long jarg2);
  public final static native long Quote_getSymbolId(long jarg1, Quote jarg1_);
  public final static native long Quote_getNumberOfTrades(long jarg1, Quote jarg1_);
  public final static native long Quote_getVolume(long jarg1, Quote jarg1_);
  public final static native long Quote_getValue(long jarg1, Quote jarg1_);
  public final static native long Quote_getLastTradePrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getLastTradeQty(long jarg1, Quote jarg1_);
  public final static native long Quote_getOpenPrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getClosePrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getHighPrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getLowPrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getTotalBidQty(long jarg1, Quote jarg1_);
  public final static native long Quote_getTotalAskQty(long jarg1, Quote jarg1_);
  public final static native long Quote_getLowerCktLimit(long jarg1, Quote jarg1_);
  public final static native long Quote_getUpperCktLimit(long jarg1, Quote jarg1_);
  public final static native short Quote_getDepth(long jarg1, Quote jarg1_);
  public final static native long Quote_getBidPrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getBidQty(long jarg1, Quote jarg1_);
  public final static native long Quote_getAskPrice(long jarg1, Quote jarg1_);
  public final static native long Quote_getAskQty(long jarg1, Quote jarg1_);
  public final static native void delete_Quote(long jarg1);
  public final static native long new_MarketData__SWIG_0();
  public final static native long new_MarketData__SWIG_1(long jarg1, Quote jarg1_);
  public final static native long MarketData_getInstrument(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getLastPrice(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getLastQty(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getLastTime(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getTotalQty(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getDepth(long jarg1, MarketData jarg1_, int jarg2);
  public final static native int MarketData_getPrice(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getQty(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getRank(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native boolean MarketData_getCount(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native boolean MarketData_hasQty(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getAvgPrice(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getQtyForAvgPrice(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getAvgPriceForQty(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getQtyForWorstPrice(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getWorstPriceForQty(long jarg1, MarketData jarg1_, int jarg2, int jarg3);
  public final static native int MarketData_getDayOpen(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getDayHigh(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getDayLow(long jarg1, MarketData jarg1_);
  public final static native int MarketData_getDayClose(long jarg1, MarketData jarg1_);
  public final static native void delete_MarketData(long jarg1);
  public final static native void delete_Application(long jarg1);
  public final static native void Application_onTick(long jarg1, Application jarg1_, long jarg2, MarketData jarg2_);
  public final static native void Application_onTickSwigExplicitApplication(long jarg1, Application jarg1_, long jarg2, MarketData jarg2_);
  public final static native void Application_onLogin(long jarg1, Application jarg1_, boolean jarg2);
  public final static native void Application_onLoginSwigExplicitApplication(long jarg1, Application jarg1_, boolean jarg2);
  public final static native void Application_onLogout(long jarg1, Application jarg1_, boolean jarg2);
  public final static native void Application_onLogoutSwigExplicitApplication(long jarg1, Application jarg1_, boolean jarg2);
  public final static native void Application_onExecutionReport(long jarg1, Application jarg1_, long jarg2, ExecutionReport jarg2_);
  public final static native void Application_onExecutionReportSwigExplicitApplication(long jarg1, Application jarg1_, long jarg2, ExecutionReport jarg2_);
  public final static native void Application_onLoadInstrumentEnd(long jarg1, Application jarg1_, String jarg2, boolean jarg3);
  public final static native void Application_onLoadInstrumentEndSwigExplicitApplication(long jarg1, Application jarg1_, String jarg2, boolean jarg3);
  public final static native long new_Application();
  public final static native void Application_director_connect(Application obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void Application_change_ownership(Application obj, long cptr, boolean take_or_release);
  public final static native void Context_login__SWIG_0(long jarg1, Context jarg1_, int jarg2, String jarg3, String jarg4, short jarg5, boolean jarg6);
  public final static native void Context_login__SWIG_1(long jarg1, Context jarg1_, int jarg2, String jarg3, String jarg4, short jarg5);
  public final static native void Context_logout(long jarg1, Context jarg1_);
  public final static native boolean Context_placeOrder(long jarg1, Context jarg1_, long jarg2, Order jarg2_);
  public final static native void Context_enableLogging__SWIG_0(long jarg1, Context jarg1_, int jarg2);
  public final static native void Context_enableLogging__SWIG_1(long jarg1, Context jarg1_);
  public final static native void Context_subscribe(long jarg1, Context jarg1_, long jarg2, Instrument jarg2_);
  public final static native void Context_unsubscribe(long jarg1, Context jarg1_, long jarg2, Instrument jarg2_);
  public final static native void Context_loadInstrument(long jarg1, Context jarg1_, String jarg2);
  public final static native long Context_getInstrument(long jarg1, Context jarg1_, String jarg2);
  public final static native long Context_getInstance();
  public final static native long Context_getContextImpl(long jarg1, Context jarg1_);
  public final static native long Context_getApplication(long jarg1, Context jarg1_);
  public final static native void Context_setApplication(long jarg1, Context jarg1_, long jarg2, Application jarg2_);
  public final static native void delete_Context(long jarg1);
  public final static native long new_Trade__SWIG_0(long jarg1, Instrument jarg1_);
  public final static native long new_Trade__SWIG_1(long jarg1, Trade jarg1_);
  public final static native void Trade_initialize(long jarg1, Trade jarg1_);
  public final static native long Trade_getInstrument(long jarg1, Trade jarg1_);
  public final static native long Trade_getTradeId(long jarg1, Trade jarg1_);
  public final static native long Trade_getClOrdId(long jarg1, Trade jarg1_);
  public final static native long Trade_getOrigClOrdId(long jarg1, Trade jarg1_);
  public final static native long Trade_getExchangeOrderId(long jarg1, Trade jarg1_);
  public final static native int Trade_getOrderMode(long jarg1, Trade jarg1_);
  public final static native int Trade_getFilledQuantity(long jarg1, Trade jarg1_);
  public final static native int Trade_getFilledPrice(long jarg1, Trade jarg1_);
  public final static native int Trade_getOrderType(long jarg1, Trade jarg1_);
  public final static native int Trade_getTradeTime(long jarg1, Trade jarg1_);
  public final static native void Trade_setInstrument(long jarg1, Trade jarg1_, long jarg2, Instrument jarg2_);
  public final static native void Trade_setTradeId(long jarg1, Trade jarg1_, long jarg2);
  public final static native void Trade_setClOrdId(long jarg1, Trade jarg1_, long jarg2);
  public final static native void Trade_setOrigClOrdId(long jarg1, Trade jarg1_, long jarg2);
  public final static native void Trade_setExchangeOrderId(long jarg1, Trade jarg1_, long jarg2);
  public final static native void Trade_setOrderMode(long jarg1, Trade jarg1_, int jarg2);
  public final static native void Trade_setFilledQuantity(long jarg1, Trade jarg1_, int jarg2);
  public final static native void Trade_setFilledPrice(long jarg1, Trade jarg1_, int jarg2);
  public final static native void Trade_setOrderType(long jarg1, Trade jarg1_, int jarg2);
  public final static native void Trade_setTradeTime(long jarg1, Trade jarg1_, int jarg2);
  public final static native void delete_Trade(long jarg1);
  public final static native long new_Position__SWIG_0(long jarg1, Instrument jarg1_);
  public final static native long new_Position__SWIG_1(long jarg1, Position jarg1_);
  public final static native void Position_initialize(long jarg1, Position jarg1_);
  public final static native int Position_getQuantity(long jarg1, Position jarg1_);
  public final static native int Position_getAveragePrice(long jarg1, Position jarg1_);
  public final static native long Position_getInstrument(long jarg1, Position jarg1_);
  public final static native int Position_getOrderMode(long jarg1, Position jarg1_);
  public final static native void Position_setQuantity(long jarg1, Position jarg1_, int jarg2);
  public final static native void Position_setAveragePrice(long jarg1, Position jarg1_, int jarg2);
  public final static native void Position_setInstrument(long jarg1, Position jarg1_, long jarg2, Instrument jarg2_);
  public final static native void Position_setOrderType(long jarg1, Position jarg1_, int jarg2);
  public final static native void delete_Position(long jarg1);
  public final static native long NetPositions_getPosition(long jarg1, NetPositions jarg1_, long jarg2, Instrument jarg2_, int jarg3);
  public final static native int NetPositions_update(long jarg1, NetPositions jarg1_, long jarg2, ExecutionReport jarg2_);
  public final static native long new_NetPositions();
  public final static native void delete_NetPositions(long jarg1);
  public final static native long TradeBook_getTrades(long jarg1, TradeBook jarg1_, long jarg2);
  public final static native int TradeBook_update(long jarg1, TradeBook jarg1_, long jarg2, ExecutionReport jarg2_);
  public final static native long new_TradeBook();
  public final static native void delete_TradeBook(long jarg1);
  public final static native long OrderBook_getOrder(long jarg1, OrderBook jarg1_, long jarg2);
  public final static native int OrderBook_update__SWIG_0(long jarg1, OrderBook jarg1_, long jarg2, ExecutionReport jarg2_, boolean jarg3);
  public final static native int OrderBook_update__SWIG_1(long jarg1, OrderBook jarg1_, long jarg2, ExecutionReport jarg2_);
  public final static native void OrderBook_insert(long jarg1, OrderBook jarg1_, long jarg2, Order jarg2_);
  public final static native long new_OrderBook();
  public final static native void delete_OrderBook(long jarg1);
  public final static native long Portfolio_getInstance();
  public final static native void Portfolio_insert(long jarg1, Portfolio jarg1_, long jarg2, Order jarg2_);
  public final static native long Portfolio_getOrderByTokenId(long jarg1, Portfolio jarg1_, int jarg2);
  public final static native long Portfolio_getNetPositions(long jarg1, Portfolio jarg1_);
  public final static native long Portfolio_getOrderBook(long jarg1, Portfolio jarg1_);
  public final static native long Portfolio_getTradeBook(long jarg1, Portfolio jarg1_);
  public final static native void delete_Portfolio(long jarg1);

  public static void SwigDirector_AbstractLogger_log(AbstractLogger self, int level, String message) {
    self.log(LogLevel.swigToEnum(level), message);
  }
  public static int SwigDirector_AbstractLogger_getLevel(AbstractLogger self, int level) {
    return self.getLevel(LogLevel.swigToEnum(level));
  }
  public static void SwigDirector_Application_onTick(Application self, long arg0) {
    self.onTick(new MarketData(arg0, false));
  }
  public static void SwigDirector_Application_onLogin(Application self, boolean status) {
    self.onLogin(status);
  }
  public static void SwigDirector_Application_onLogout(Application self, boolean status) {
    self.onLogout(status);
  }
  public static void SwigDirector_Application_onExecutionReport(Application self, long report) {
    self.onExecutionReport(new ExecutionReport(report, false));
  }
  public static void SwigDirector_Application_onLoadInstrumentEnd(Application self, String instrumentName, boolean success) {
    self.onLoadInstrumentEnd(instrumentName, success);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
