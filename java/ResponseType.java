/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class ResponseType {
  public final static ResponseType ResponseType_SUCCESS = new ResponseType("ResponseType_SUCCESS");
  public final static ResponseType ResponseType_FAILURE = new ResponseType("ResponseType_FAILURE");
  public final static ResponseType ResponseType_TERMINATE_SUCCESS = new ResponseType("ResponseType_TERMINATE_SUCCESS");
  public final static ResponseType ResponseType_TERMINATE_FAILURE = new ResponseType("ResponseType_TERMINATE_FAILURE");
  public final static ResponseType ResponseType_TERMINATE_SQUAREOFF_SUCCESS = new ResponseType("ResponseType_TERMINATE_SQUAREOFF_SUCCESS");
  public final static ResponseType ResponseType_TERMINATE_SQUAREOFF_FAILURE = new ResponseType("ResponseType_TERMINATE_SQUAREOFF_FAILURE");
  public final static ResponseType ResponseType_PAUSE_STRATEGY_SUCCESS = new ResponseType("ResponseType_PAUSE_STRATEGY_SUCCESS");
  public final static ResponseType ResponseType_PAUSE_STRATEGY_FAILURE = new ResponseType("ResponseType_PAUSE_STRATEGY_FAILURE");
  public final static ResponseType ResponseType_STRATEGY_RUNNING = new ResponseType("ResponseType_STRATEGY_RUNNING");
  public final static ResponseType ResponseType_TERMINATE_SPREAD_BREACHED = new ResponseType("ResponseType_TERMINATE_SPREAD_BREACHED");
  public final static ResponseType ResponseType_ALGO_NOT_ALLOWED = new ResponseType("ResponseType_ALGO_NOT_ALLOWED");
  public final static ResponseType ResponseType_MAX = new ResponseType("ResponseType_MAX");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ResponseType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + ResponseType.class + " with value " + swigValue);
  }

  private ResponseType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ResponseType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ResponseType(String swigName, ResponseType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ResponseType[] swigValues = { ResponseType_SUCCESS, ResponseType_FAILURE, ResponseType_TERMINATE_SUCCESS, ResponseType_TERMINATE_FAILURE, ResponseType_TERMINATE_SQUAREOFF_SUCCESS, ResponseType_TERMINATE_SQUAREOFF_FAILURE, ResponseType_PAUSE_STRATEGY_SUCCESS, ResponseType_PAUSE_STRATEGY_FAILURE, ResponseType_STRATEGY_RUNNING, ResponseType_TERMINATE_SPREAD_BREACHED, ResponseType_ALGO_NOT_ALLOWED, ResponseType_MAX };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

